{
  "info": {
    "name": "Dorm Mart XSS Protection Tests",
    "description": "Comprehensive XSS protection testing for Dorm Mart API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://aptitude.cse.buffalo.edu/CSE442/2025-Fall/cse-442j",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication Tests",
      "item": [
        {
          "name": "Login - Normal (Should Work)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@buffalo.edu\",\n  \"password\": \"1234!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.ok).to.be.true;",
                  "});",
                  "",
                  "pm.test('Security headers present', function () {",
                  "    pm.expect(pm.response.headers.get('Content-Security-Policy')).to.not.be.null;",
                  "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login - XSS in Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"<script>alert('XSS')</script>@buffalo.edu\",\n  \"password\": \"1234!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('XSS in email should be rejected', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('No script execution in response', function () {",
                  "    pm.expect(pm.response.text()).to.not.include('<script>');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login - XSS in Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@buffalo.edu\",\n  \"password\": \"<script>alert('XSS')</script>\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('XSS in password should fail login', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('No script execution in response', function () {",
                  "    pm.expect(pm.response.text()).to.not.include('<script>');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Account Creation Tests",
      "item": [
        {
          "name": "Create Account - XSS in First Name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"<script>alert('XSS')</script>\",\n  \"lastName\": \"Doe\",\n  \"gradMonth\": 12,\n  \"gradYear\": 2025,\n  \"email\": \"testuser2@buffalo.edu\",\n  \"promos\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/create_account.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "create_account.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('XSS in first name should be sanitized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('No script execution in response', function () {",
                  "    pm.expect(pm.response.text()).to.not.include('<script>');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Account - XSS in Last Name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"<img src=x onerror=alert('XSS')>\",\n  \"gradMonth\": 12,\n  \"gradYear\": 2025,\n  \"email\": \"testuser3@buffalo.edu\",\n  \"promos\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/create_account.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "create_account.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('XSS in last name should be sanitized', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('No script execution in response', function () {",
                  "    pm.expect(pm.response.text()).to.not.include('onerror=');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Security Headers Tests",
      "item": [
        {
          "name": "XSS Test Page - Script Tag",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/xss_test.php?test=<script>alert('XSS')</script>",
              "host": ["{{base_url}}"],
              "path": ["api", "xss_test.php"],
              "query": [
                {
                  "key": "test",
                  "value": "<script>alert('XSS')</script>"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Security headers present', function () {",
                  "    pm.expect(pm.response.headers.get('Content-Security-Policy')).to.not.be.null;",
                  "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                  "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                  "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');",
                  "});",
                  "",
                  "pm.test('XSS input is sanitized', function () {",
                  "    pm.expect(pm.response.text()).to.include('&lt;script&gt;');",
                  "    pm.expect(pm.response.text()).to.not.include('<script>');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "XSS Test Page - Image XSS",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/xss_test.php?test=<img src=x onerror=alert('XSS')>",
              "host": ["{{base_url}}"],
              "path": ["api", "xss_test.php"],
              "query": [
                {
                  "key": "test",
                  "value": "<img src=x onerror=alert('XSS')>"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Image XSS is sanitized', function () {",
                  "    pm.expect(pm.response.text()).to.include('&lt;img');",
                  "    pm.expect(pm.response.text()).to.not.include('onerror=');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "SQL Injection Tests",
      "item": [
        {
          "name": "Login - SQL Injection Attempt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@buffalo.edu\",\n  \"password\": \"'; DROP TABLE users; --\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login.php",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login.php"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SQL injection should fail login', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('No SQL injection in response', function () {",
                  "    pm.expect(pm.response.text()).to.not.include('DROP TABLE');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
